C51 COMPILER V9.54   MAIN                                                                  06/16/2025 19:41:32 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.l
                    -st) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "datatype.h"
   3          #include "Delay.h"
   4          #include "OLED.h"
   5          #include "my_interrupt.h"
   6          #include "OLED_show.h"
   7          
   8          //Timer2采样率
   9          #define Timer2_HZ  5000.0
  10          
  11          uint8_t start_flag=0;
  12          
  13          void main(){
  14   1              
  15   1              //初始化
  16   1              OLED_Init();
  17   1              OLED_Clear_();
  18   1              OLED_Clear();
  19   1      
  20   1              oled_show_init();
  21   1              
  22   1              Interrupt_Init();
  23   1              while(1){
  24   2                      if(Oled_num_show_flag){
  25   3                              Oled_num_show_flag=0;
  26   3                              oled_num_show();
  27   3                      }
  28   2                      if(Oled_host_flag){
  29   3                              oled_show();
  30   3                              Oled_host_flag=0;
  31   3                      }               
  32   2              }
  33   1      }
  34          
  35          
  36          void INT1_ISR() interrupt 2 {
  37   1              bit key1=1,key1_last=1;
  38   1              Delay(20);
  39   1              key1=0;
  40   1              while(P3_3==0);
  41   1              Delay(20);
  42   1              IE1=0;                          //防止再次进中断
  43   1              
  44   1              if( key1==0 && key1_last==1 ){
  45   2                      //key1按下逻辑,进入设置界面\设置频率\占空比
  46   2                      Oled_set_flag[Oled_line_num]++;
  47   2                      Oled_set_flag[Oled_line_num]%=3;
  48   2                      //KEY4响应不了中断时的紧急处理手段，增强系统鲁棒性
  49   2                      TR2=0;
  50   2                      Oled_host_flag=1;       
  51   2              }
  52   1              key1_last=key1;
  53   1      }
  54          
C51 COMPILER V9.54   MAIN                                                                  06/16/2025 19:41:32 PAGE 2   

  55          //10ms
  56          void Timer0_ISR(void) interrupt 1{
  57   1              static uint8_t KeyTick=0;
  58   1              static uint8_t key2=1,key3=1,key4=1;
  59   1              static uint8_t key2_last=1,key3_last=1,key4_last=1;
  60   1              static uint8_t time_num;
  61   1              TL0 = 0x00;             //设置定时初值
  62   1              TH0 = 0xB8;             //设置定时初值  
  63   1              
  64   1              KeyTick++;
  65   1              
  66   1              if(KeyTick==1){ //按键key2~4判定
  67   2                      KeyTick=0;
  68   2                      
  69   2                      key2=P3_4;
  70   2                      key3=P3_6;
  71   2                      key4=P3_7;
  72   2                      if(key2==0&&key2_last==1){//key2按下，加操作
  73   3                              if(Oled_set_flag[Oled_line_num]==1){
  74   4                                      Oled_fre[Oled_line_num]++;
  75   4                              }
  76   3                              else if(Oled_set_flag[Oled_line_num]==2){
  77   4                                      Oled_duty_cycle[Oled_line_num]++;
  78   4                                      if(Oled_duty_cycle[Oled_line_num]>100){
  79   5                                      Oled_duty_cycle[Oled_line_num]=0;
  80   5                                      }
  81   4                              }
  82   3                              else{
  83   4                                      Oled_line_num++;
  84   4                                      if(Oled_line_num>3){Oled_line_num=0;}                   
  85   4                              }                               
  86   3                      }
  87   2                      if(key3==0&&key3_last==1){//key3按下，减操作
  88   3                              if(Oled_set_flag[Oled_line_num]==1){
  89   4                                      Oled_fre[Oled_line_num]--;
  90   4                              }
  91   3                              else if(Oled_set_flag[Oled_line_num]==2){
  92   4                                      Oled_duty_cycle[Oled_line_num]--;
  93   4                                      if(Oled_duty_cycle[Oled_line_num]>100){
  94   5                                      Oled_duty_cycle[Oled_line_num]=100;
  95   5                                      }
  96   4                              }
  97   3                              else{
  98   4                                      Oled_line_num--;
  99   4                                      if(Oled_line_num>3){Oled_line_num=3;}                   
 100   4                              }       
 101   3                      }
 102   2                      if(key4==0&&key4_last==1){
 103   3                              TR2=~TR2;
 104   3                              if(TR2==0){
 105   4                                      P1=0xff;
 106   4                                      //重新进入设置阶段，清除Oled_set_flag
 107   4                                      Oled_set_flag[0]=0;
 108   4                                      Oled_set_flag[1]=0;
 109   4                                      Oled_set_flag[2]=0;
 110   4                                      Oled_set_flag[3]=0;
 111   4                              }else{
 112   4                                      start_flag=1;
 113   4                              }
 114   3                      }//key4按下     打开频率输出
 115   2                      //长按判定 2s time_num=100;
 116   2                      if(key2==0&&key2_last==0){
C51 COMPILER V9.54   MAIN                                                                  06/16/2025 19:41:32 PAGE 3   

 117   3                              time_num++;
 118   3                              if(time_num>100){
 119   4                                      if(Oled_set_flag[Oled_line_num]==1){
 120   5                                              Oled_fre[Oled_line_num]++;
 121   5                                      }
 122   4                                      else if(Oled_set_flag[Oled_line_num]==2){
 123   5                                              Oled_duty_cycle[Oled_line_num]++;       
 124   5                                              if(Oled_duty_cycle[Oled_line_num]>100){
 125   6                                              Oled_duty_cycle[Oled_line_num]=0;
 126   6                                              }
 127   5                                      }
 128   4                                      Oled_num_show_flag=1;
 129   4                              }
 130   3                      }
 131   2                      if(key3==0&&key3_last==0){
 132   3                              time_num++;
 133   3                              if(time_num>100){
 134   4                                      if(Oled_set_flag[Oled_line_num]==1){
 135   5                                              Oled_fre[Oled_line_num]--;
 136   5                                      }
 137   4                                      else if(Oled_set_flag[Oled_line_num]==2){
 138   5                                              Oled_duty_cycle[Oled_line_num]--;       
 139   5                                              if(Oled_duty_cycle[Oled_line_num]>100){
 140   6                                              Oled_duty_cycle[Oled_line_num]=100;
 141   6                                              }
 142   5                                      }
 143   4                                      Oled_num_show_flag=1;
 144   4                              }
 145   3                      }
 146   2                      //松手判定
 147   2                      if(key2==1&&key2_last==0){
 148   3                              time_num=0;
 149   3                              Oled_host_flag=1;
 150   3                      }
 151   2                      if(key3==1&&key3_last==0){
 152   3                              time_num=0;
 153   3                              Oled_host_flag=1;
 154   3                      }
 155   2                      key2_last=key2;
 156   2                      key3_last=key3;
 157   2                      key4_last=key4;
 158   2              }
 159   1      
 160   1      }
 161          
 162          //void set_fre(uint8_t x, bit value) {
 163          //    switch (x) {
 164          //        case 0: P2_0 = value; break;
 165          //        case 1: P2_1 = value; break;
 166          //        case 2: P2_2 = value; break;
 167          //        case 3: P2_3 = value; break;
 168          //    }
 169          //}
 170          
 171          
 172          void Timer2_ISR() interrupt 5 {
 173   1              static uint16_t fre_num[4];
 174   1              static uint16_t _fre_num[4];
 175   1              static uint16_t _duty_cycle_num[4];
 176   1              uint8_t i=0;
 177   1              P1=~P1;
 178   1              if(TF2){
C51 COMPILER V9.54   MAIN                                                                  06/16/2025 19:41:32 PAGE 4   

 179   2                      TF2 = 0;            // 必须手动清除中断标志
 180   2                      if(start_flag){
 181   3                              start_flag=0;
 182   3                              for(i=0;i<4;i++){
 183   4                                      _fre_num[i]=Timer2_HZ/Oled_fre[i];
 184   4                                      _duty_cycle_num[i]=Timer2_HZ*Oled_duty_cycle[i]/Oled_fre[i]/100;
 185   4                              }
 186   3                      }
 187   2                      // ===== fre判断 =====
 188   2                      for(i=0;i<4;i++){
 189   3                              fre_num[i]++;   
 190   3                              if(fre_num[i] >= _fre_num[i]) fre_num[i] = 0;
 191   3                              if(fre_num[i] < _duty_cycle_num[i])
 192   3                                      switch (i) {
 193   4                                      case 0: P2_0 = 1; break;
 194   4                                      case 1: P2_1 = 1; break;
 195   4                                      case 2: P2_2 = 1; break;
 196   4                                      case 3: P2_3 = 1; break;
 197   4                                      }
 198   3                              else
 199   3                                      switch (i) {
 200   4                                      case 0: P2_0 = 0; break;
 201   4                                      case 1: P2_1 = 0; break;
 202   4                                      case 2: P2_2 = 0; break;
 203   4                                      case 3: P2_3 = 0; break;
 204   4                                      }       
 205   3                      }       
 206   2              }
 207   1      
 208   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    954    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     33       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
